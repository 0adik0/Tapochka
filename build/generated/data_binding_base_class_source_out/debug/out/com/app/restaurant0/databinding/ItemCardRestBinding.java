// Generated by view binder compiler. Do not edit!
package com.app.restaurant0.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.restaurant0.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCardRestBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnRes;

  @NonNull
  public final ImageView imgRes;

  @NonNull
  public final TextView nameRes;

  @NonNull
  public final TextView phoneRes;

  @NonNull
  public final TextView priceRes;

  @NonNull
  public final TextView streetRes;

  private ItemCardRestBinding(@NonNull LinearLayout rootView, @NonNull Button btnRes,
      @NonNull ImageView imgRes, @NonNull TextView nameRes, @NonNull TextView phoneRes,
      @NonNull TextView priceRes, @NonNull TextView streetRes) {
    this.rootView = rootView;
    this.btnRes = btnRes;
    this.imgRes = imgRes;
    this.nameRes = nameRes;
    this.phoneRes = phoneRes;
    this.priceRes = priceRes;
    this.streetRes = streetRes;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCardRestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCardRestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_card_rest, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCardRestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRes;
      Button btnRes = rootView.findViewById(id);
      if (btnRes == null) {
        break missingId;
      }

      id = R.id.imgRes;
      ImageView imgRes = rootView.findViewById(id);
      if (imgRes == null) {
        break missingId;
      }

      id = R.id.nameRes;
      TextView nameRes = rootView.findViewById(id);
      if (nameRes == null) {
        break missingId;
      }

      id = R.id.phoneRes;
      TextView phoneRes = rootView.findViewById(id);
      if (phoneRes == null) {
        break missingId;
      }

      id = R.id.priceRes;
      TextView priceRes = rootView.findViewById(id);
      if (priceRes == null) {
        break missingId;
      }

      id = R.id.streetRes;
      TextView streetRes = rootView.findViewById(id);
      if (streetRes == null) {
        break missingId;
      }

      return new ItemCardRestBinding((LinearLayout) rootView, btnRes, imgRes, nameRes, phoneRes,
          priceRes, streetRes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
